#include <stdio.h>
#include <stdlib.h>
#include <math.h>
struct point
{
    float x,y;
};
struct rectangle
{
    struct point a[3];
    float area;
};
int input()
{
    int n;
    printf("Enter number of rectangles:");
    scanf("%d",&n);
    return n;
}
void inp_coordinates(int n,struct rectangle *r)
{
	int i;
    printf("Enter coordinates of rectangle %d: ",n+1);
    for(i=0;i<3;i++)
    {
    scanf("%f%f",r->a[i].x,r->a[i].y);
    }
}

float compute(struct rectangle *r)
{
    float d1=sqrt(pow((r->a[2].x-r->a[1].x),2)+pow((r->a[2].y-r->a[1].y),2));
    float d2=sqrt(pow((r->a[2].x-r->a[0].x),2)+pow((r->a[2].y-r->a[0].y),2));
    float d3=sqrt(pow((r->a[0].x-r->a[1].x),2)+pow((r->a[0].y-r->a[1].y),2));
    
    if(d1>d2 && d1>d3)
        r->area=d2*d3;
    else if(d2>d1 && d2>d3)
        r->area=d1*d3;
    else if(d3>d2 && d3>d1)
        r->area=d2*d1;
}
void output(struct rectangle *r)
{
	int i;
    printf("Area of rectangle with vertices:");
    for(i=0;i<3;i++)
    {
    printf("(%f,%f) ",r->a[i].x,r->a[i].y);
    }
    printf("=%f\n",r->area);
}
int main()
{
    int n,i;
    n=input();
    float area[n];
    struct rectangle r[n];
    for(i=0;i<n;i++)
    {
        inp_coordinates(i,&r[i]);
        compute(&r[i]);
    }
    for(i=0;i<n;i++)
    {
        output(&r[i]);
    }
    return 0;
}
